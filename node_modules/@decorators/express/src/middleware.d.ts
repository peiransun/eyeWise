/// <reference types="express" />
import { Request, Response, NextFunction, RequestHandler } from 'express';
export interface Type extends Function {
    new (...args: any[]): any;
}
/**
 * Middleware class interface
 *
 * @export
 * @interface Middleware
 */
export interface Middleware {
    use(request: Request, response: Response, next: NextFunction): void;
}
/**
 * Error middleware interface
 *
 * @export
 * @interface ErrorMiddleware
 */
export interface ErrorMiddleware {
    use(error: any, request: Request, response: Response, next: NextFunction): void;
}
/**
 * Create request middleware handler that uses class or function provided as middleware
 *
 * @export
 * @param {Middleware} middleware
 *
 * @returns {RequestHandler}
 */
export declare function middlewareHandler(middleware: Type): RequestHandler;
